version: '3.8'

services:
  app:
    build: .
    image: laravel-app
    container_name: laravel-app
    restart: unless-stopped
    environment:
      APP_ENV: ${APP_ENV:-production}
      APP_DEBUG: ${APP_DEBUG:-false}
    volumes:
      - ./:/var/www/html
    ports:
      - "8000:80"
    depends_on:
      - db
      - redis
    networks:
      - laravel-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:15-alpine
    container_name: laravel-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - laravel-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: laravel-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - laravel-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  scheduler:
    image: laravel-app
    container_name: laravel-scheduler
    restart: on-failure
    depends_on:
      - app
    entrypoint: ["/bin/sh", "-c"]
    command: >
      while true; do
        php /var/www/html/artisan schedule:run --verbose --no-interaction
        sleep 60
      done
    networks:
      - laravel-network
    profiles: ["queue"]

  queue:
    image: laravel-app
    container_name: laravel-queue
    restart: on-failure
    depends_on:
      - app
    command: php /var/www/html/artisan queue:work --tries=3 --timeout=30
    networks:
      - laravel-network
    profiles: ["queue"]

volumes:
  postgres_data:
  redis_data:

networks:
  laravel-network:
    driver: bridge
